!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module caete_module ! in 
    interface  ! in :caete_module
        module types ! in :caete_module:global.f90
            integer, public,parameter,optional :: l_1=2
            integer, public,parameter,optional :: i_2=2
            integer, public,parameter,optional :: i_4=4
            integer, public,parameter,optional :: r_4=4
            integer, public,parameter,optional :: r_8=8
        end module types
        module global_par ! in :caete_module:global.f90
            use types
            real(kind=4), public,parameter,optional :: q10=1.4
            real(kind=4), public,parameter,optional :: h=1.0
            real(kind=4), public,parameter,optional :: diffu=103680000000000.0
            real(kind=4), public,parameter,optional,depend(h,diffu) :: tau=4.822530864197531e-15
            real(kind=4), public,parameter,optional :: rcmax=5000.0
            real(kind=4), public,parameter,optional :: rcmin=100
            real(kind=8), public,parameter,optional :: cmin=1.0d-3
            real(kind=8), public,parameter,optional :: csru=0.5d0
            real(kind=8), public,parameter,optional :: alfm=1.391d0
            real(kind=8), public,parameter,optional :: gm=3.26d0*86400d0
            real(kind=8), public,parameter,optional :: sapwood=0.05d0
            real(kind=4), public,parameter,optional :: ks=0.25
            integer(kind=4), public,parameter,optional :: npls=100
            integer(kind=4), public,parameter,optional :: ntraits=17
        end module global_par
        module photo_par ! in :caete_module:global.f90
            use types, only: r_8
            real(kind=8), parameter,public,optional :: a=0.8300d0
            real(kind=8), parameter,public,optional :: a2=0.930d0
            real(kind=8), parameter,public,optional :: p3=21200.0d0
            real(kind=8), parameter,public,optional :: p4=0.080d0
            real(kind=8), parameter,public,optional :: p5=0.150d0
            real(kind=8), parameter,public,optional :: p6=2.0d0
            real(kind=8), parameter,public,optional :: p7=0.50d0
            real(kind=8), parameter,public,optional :: p8=5200.0d0
            real(kind=8), parameter,public,optional :: p9=0.570d0
            real(kind=8), parameter,public,optional :: p10=0.100d0
            real(kind=8), parameter,public,optional :: p11=25.0d0
            real(kind=8), parameter,public,optional :: p12=30.0d0
            real(kind=8), parameter,public,optional :: p13=2.100d0
            real(kind=8), parameter,public,optional :: p14=30000.0d0
            real(kind=8), parameter,public,optional :: p15=1.20d0
            real(kind=8), parameter,public,optional :: p19=0.90d0
            real(kind=8), parameter,public,optional :: p20=0.10d0
            real(kind=8), parameter,public,optional :: p22=2.0d0
            real(kind=8), parameter,public,optional :: p23=0.30d0
            real(kind=8), parameter,public,optional :: p24=36.0d0
            real(kind=8), parameter,public,optional :: p25=1.17d-5
            real(kind=8), parameter,public,optional :: p26=0.50d0
            real(kind=8), parameter,public,optional :: p27=1.50d0
            real(kind=8), parameter,public,optional :: alphap=0.0913d0
            real(kind=8), parameter,public,optional :: vpm25=85.0d0
            real(kind=8), parameter,public,optional :: h_vpm=185075.0d0
            real(kind=8), parameter,public,optional :: s_vpm=591.0d0
            real(kind=8), parameter,public,optional :: r_vpm=8.314d0
            real(kind=8), parameter,public,optional :: e_vpm=60592.0d0
            real(kind=8), parameter,public,optional :: kp25=82.0d0
        end module photo_par
        module photo ! in :caete_module:funcs.f90
            function leap(year) result (is_leap) ! in :caete_module:funcs.f90:photo
                use types
                integer(kind=4) intent(in) :: year
                logical(kind=2) :: is_leap
            end function leap
            function gross_ph(f1,cleaf,sla) result (ph) ! in :caete_module:funcs.f90:photo
                use types, only: r_4,r_8
                real(kind=8) intent(in) :: f1
                real(kind=8) intent(in) :: cleaf
                real(kind=8) intent(in) :: sla
                real(kind=4) :: ph
            end function gross_ph
            function leaf_area_index(cleaf,sla) result (lai) ! in :caete_module:funcs.f90:photo
                use types, only: r_8
                real(kind=8) intent(in) :: cleaf
                real(kind=8) intent(in) :: sla
                real(kind=8) :: lai
            end function leaf_area_index
            function spec_leaf_area(tau_leaf) result (sla) ! in :caete_module:funcs.f90:photo
                use types, only: r_8
                real(kind=8) intent(in) :: tau_leaf
                real(kind=8) :: sla
            end function spec_leaf_area
            function f_four(fs,cleaf,sla) result (lai_ss) ! in :caete_module:funcs.f90:photo
                use types, only: i_4,r_4,r_8
                use photo_par, only: p26,p27
                integer(kind=4) intent(in) :: fs
                real(kind=8) intent(in) :: cleaf
                real(kind=8) intent(in) :: sla
                real(kind=8) :: lai_ss
            end function f_four
            function water_stress_modifier(w,cfroot,rc,ep,wmax) result (f5) ! in :caete_module:funcs.f90:photo
                use types, only: r_4,r_8
                use global_par, only: csru,alfm,gm,rcmin,rcmax
                real(kind=8) intent(in) :: w
                real(kind=8) intent(in) :: cfroot
                real(kind=4) intent(in) :: rc
                real(kind=4) intent(in) :: ep
                real(kind=8) intent(in) :: wmax
                real(kind=8) :: f5
            end function water_stress_modifier
            function canopy_resistence(vpd_in,f1_in,g1,ca) result (rc2_in) ! in :caete_module:funcs.f90:photo
                use types, only: r_4,r_8
                real(kind=4) intent(in) :: vpd_in
                real(kind=8) intent(in) :: f1_in
                real(kind=8) intent(in) :: g1
                real(kind=8) intent(in) :: ca
                real(kind=4) :: rc2_in
            end function canopy_resistence
            function stomatal_conductance(vpd_in,f1_in,g1,ca) result (gs) ! in :caete_module:funcs.f90:photo
                use types, only: r_4,r_8
                real(kind=4) intent(in) :: vpd_in
                real(kind=4) intent(in) :: f1_in
                real(kind=4) intent(in) :: g1
                real(kind=8) intent(in) :: ca
                real(kind=8) :: gs
            end function stomatal_conductance
            function water_ue(a,g,p0,vpd) result (wue) ! in :caete_module:funcs.f90:photo
                use types
                real(kind=8) intent(in) :: a
                real(kind=4) intent(in) :: g
                real(kind=4) intent(in) :: p0
                real(kind=4) intent(in) :: vpd
                real(kind=4) :: wue
            end function water_ue
            function transpiration(g,p0,vpd,unit) result (e) ! in :caete_module:funcs.f90:photo
                use types
                real(kind=4) intent(in) :: g
                real(kind=4) intent(in) :: p0
                real(kind=4) intent(in) :: vpd
                integer(kind=4) intent(in) :: unit
                real(kind=4) :: e
            end function transpiration
            function vapor_p_defcit(t,rh) result (vpd_0) ! in :caete_module:funcs.f90:photo
                use types
                real(kind=4) intent(in) :: t
                real(kind=4) intent(in) :: rh
                real(kind=4) :: vpd_0
            end function vapor_p_defcit
            subroutine realized_npp(pot_npp_pool,nupt_pot,available_n,rnpp,nl) ! in :caete_module:funcs.f90:photo
                use types
                real(kind=8) intent(in) :: pot_npp_pool
                real(kind=8) intent(in) :: nupt_pot
                real(kind=8) intent(in) :: available_n
                real(kind=8) intent(out) :: rnpp
                logical(kind=2) intent(out) :: nl
            end subroutine realized_npp
            function nrubisco(leaf_t,nbio_in) result (nb) ! in :caete_module:funcs.f90:photo
                use types
                real(kind=8) intent(in) :: leaf_t
                real(kind=8) intent(in) :: nbio_in
                real(kind=8) :: nb
            end function nrubisco
            subroutine photosynthesis_rate(c_atm,temp,p0,ipar,ll,c4,nbio,pbio,leaf_turnover,f1ab,vm,amax) ! in :caete_module:funcs.f90:photo
                use types
                use global_par
                use photo_par
                real(kind=8) intent(in) :: c_atm
                real(kind=4) intent(in) :: temp
                real(kind=4) intent(in) :: p0
                real(kind=4) intent(in) :: ipar
                logical(kind=2) intent(in) :: ll
                integer(kind=4) intent(in) :: c4
                real(kind=8) intent(in) :: nbio
                real(kind=8) intent(in) :: pbio
                real(kind=8) intent(in) :: leaf_turnover
                real(kind=8) intent(out) :: f1ab
                real(kind=8) intent(out) :: vm
                real(kind=8) intent(out) :: amax
            end subroutine photosynthesis_rate
            subroutine spinup3(nppot,dt,cleafini,cfrootini,cawoodini) ! in :caete_module:funcs.f90:photo
                use types
                real(kind=4) intent(in) :: nppot
                real(kind=4) dimension(6),intent(in) :: dt
                real(kind=4) intent(out) :: cleafini
                real(kind=4) intent(out) :: cfrootini
                real(kind=4) intent(out) :: cawoodini
            end subroutine spinup3
            subroutine spinup2(nppot,dt,cleafini,cfrootini,cawoodini) ! in :caete_module:funcs.f90:photo
                use types
                use global_par, only: ntraits,npls
                real(kind=4) intent(in) :: nppot
                real(kind=4) dimension(17,100),intent(in) :: dt
                real(kind=4) dimension(100),intent(out) :: cleafini
                real(kind=4) dimension(100),intent(out) :: cfrootini
                real(kind=4) dimension(100),intent(out) :: cawoodini
            end subroutine spinup2
            function m_resp(temp,ts,cl1_mr,cf1_mr,ca1_mr,n2cl,n2cw,n2cf,aawood_mr) result (rm) ! in :caete_module:funcs.f90:photo
                use types, only: r_4,r_8
                use global_par, only: sapwood
                real(kind=4) intent(in) :: temp
                real(kind=4) intent(in) :: ts
                real(kind=8) intent(in) :: cl1_mr
                real(kind=8) intent(in) :: cf1_mr
                real(kind=8) intent(in) :: ca1_mr
                real(kind=8) intent(in) :: n2cl
                real(kind=8) intent(in) :: n2cw
                real(kind=8) intent(in) :: n2cf
                real(kind=8) intent(in) :: aawood_mr
                real(kind=4) :: rm
            end function m_resp
            function sto_resp(temp,sto_mr) result (rm) ! in :caete_module:funcs.f90:photo
                use types, only: r_4,r_8
                real(kind=4) intent(in) :: temp
                real(kind=8) dimension(3),intent(in) :: sto_mr
                real(kind=8) :: rm
            end function sto_resp
            function g_resp(beta_leaf,beta_awood,beta_froot,aawood_rg) result (rg) ! in :caete_module:funcs.f90:photo
                use types, only: r_4,r_8
                real(kind=8) intent(in) :: beta_leaf
                real(kind=8) intent(in) :: beta_awood
                real(kind=8) intent(in) :: beta_froot
                real(kind=8) intent(in) :: aawood_rg
                real(kind=4) :: rg
            end function g_resp
            function tetens(t) result (es) ! in :caete_module:funcs.f90:photo
                use types, only: r_4
                real(kind=4) intent(in) :: t
                real(kind=4) :: es
            end function tetens
            subroutine pft_area_frac(cleaf1,cfroot1,cawood1,awood,ocp_coeffs,ocp_wood,run_pls,c_to_soil) ! in :caete_module:funcs.f90:photo
                use types, only: l_1,i_4,r_8
                use global_par, only: npls,cmin,sapwood
                real(kind=8) dimension(100),intent(in) :: cleaf1
                real(kind=8) dimension(100),intent(in) :: cfroot1
                real(kind=8) dimension(100),intent(in) :: cawood1
                real(kind=8) dimension(100),intent(in) :: awood
                real(kind=8) dimension(100),intent(out) :: ocp_coeffs
                logical(kind=2) dimension(100),intent(out) :: ocp_wood
                integer(kind=4) dimension(100),intent(out) :: run_pls
                real(kind=8) dimension(100),intent(out) :: c_to_soil
            end subroutine pft_area_frac
        end module photo
        module water ! in :caete_module:funcs.f90
            subroutine soil_temp_sub(temp,tsoil) ! in :caete_module:funcs.f90:water
                use types
                use global_par
                real(kind=4) dimension(1095),intent(in) :: temp
                real(kind=4) intent(out) :: tsoil
            end subroutine soil_temp_sub
            function soil_temp(t0,temp) result (tsoil) ! in :caete_module:funcs.f90:water
                use types
                use global_par, only: h,tau,diffu
                real(kind=4) intent(in) :: t0
                real(kind=4) intent(in) :: temp
                real(kind=4) :: tsoil
            end function soil_temp
            function penman(spre,temp,ur,rn,rc2) result (evap) ! in :caete_module:funcs.f90:water
                use types, only: r_4
                use global_par, only: rcmin,rcmax
                use photo, only: tetens
                real(kind=4) intent(in) :: spre
                real(kind=4) intent(in) :: temp
                real(kind=4) intent(in) :: ur
                real(kind=4) intent(in) :: rn
                real(kind=4) intent(in) :: rc2
                real(kind=4) :: evap
            end function penman
            function available_energy(temp) result (ae) ! in :caete_module:funcs.f90:water
                use types, only: r_4
                real(kind=4) intent(in) :: temp
                real(kind=4) :: ae
            end function available_energy
            function runoff(wa) result (roff) ! in :caete_module:funcs.f90:water
                use types, only: r_4
                real(kind=4) intent(in) :: wa
                real(kind=4) :: roff
            end function runoff
            function evpot2(spre,temp,ur,rn) result (evap) ! in :caete_module:funcs.f90:water
                use types, only: r_4
                use global_par, only: rcmin,rcmax
                use photo, only: tetens
                real(kind=4) intent(in) :: spre
                real(kind=4) intent(in) :: temp
                real(kind=4) intent(in) :: ur
                real(kind=4) intent(in) :: rn
                real(kind=4) :: evap
            end function evpot2
        end module water
        module soil_dec ! in :caete_module:soil_dec.f90
            use types
            use global_par
            subroutine carbon3(tsoil,water_sat,leaf_litter,coarse_wd,root_litter,lnc,cs,snc_in,cs_out,snc,hr,nmin,pmin) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: tsoil
                real(kind=4) intent(in) :: water_sat
                real(kind=8) intent(in) :: leaf_litter
                real(kind=8) intent(in) :: coarse_wd
                real(kind=8) intent(in) :: root_litter
                real(kind=8) dimension(6),intent(in) :: lnc
                real(kind=8) dimension(4),intent(in) :: cs
                real(kind=8) dimension(8),intent(in) :: snc_in
                real(kind=8) dimension(4),intent(out) :: cs_out
                real(kind=8) dimension(8),intent(out) :: snc
                real(kind=8) intent(out) :: hr
                real(kind=8) intent(out) :: nmin
                real(kind=8) intent(out) :: pmin
            end subroutine carbon3
            function carbon_decay(q10_in,tsoil,c,residence_time) result (decay) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: q10_in
                real(kind=4) intent(in) :: tsoil
                real(kind=8) intent(in) :: c
                real(kind=8) intent(in) :: residence_time
                real(kind=4) :: decay
            end function carbon_decay
            function water_effect(theta) result (retval) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: theta
                real(kind=4) :: retval
            end function water_effect
            function sorbed_p_equil(arg) result (retval) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: arg
                real(kind=4) :: retval
            end function sorbed_p_equil
            function solution_p_equil(arg) result (retval) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: arg
                real(kind=4) :: retval
            end function solution_p_equil
            function sorbed_n_equil(arg) result (retval) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: arg
                real(kind=4) :: retval
            end function sorbed_n_equil
            function solution_n_equil(arg) result (retval) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: arg
                real(kind=4) :: retval
            end function solution_n_equil
            function leaching(n_amount,w) result (leached) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=4) intent(in) :: n_amount
                real(kind=4) intent(in) :: w
                real(kind=4) :: leached
            end function leaching
            function add_pool(a1,a2) result (new_amount) ! in :caete_module:soil_dec.f90:soil_dec
                real(kind=8) intent(in) :: a1
                real(kind=8) intent(in) :: a2
                real(kind=8) :: new_amount
            end function add_pool
        end module soil_dec
        module carbon_costs ! in :caete_module:cc.f90
            use types
            use global_par
            subroutine abrt(arg1) ! in :caete_module:cc.f90:carbon_costs
                character*(*) intent(in) :: arg1
            end subroutine abrt
            subroutine calc_passive_uptk1(nsoil,et,sd,mf,uptk) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: nsoil
                real(kind=8) intent(in) :: et
                real(kind=8) intent(in) :: sd
                real(kind=8) intent(in) :: mf
                real(kind=8) intent(out) :: uptk
            end subroutine calc_passive_uptk1
            subroutine passive_uptake(w,av_n,av_p,nupt,pupt,e,topay_upt,to_storage,passive_upt) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: w
                real(kind=8) intent(in) :: av_n
                real(kind=8) intent(in) :: av_p
                real(kind=8) intent(in) :: nupt
                real(kind=8) intent(in) :: pupt
                real(kind=8) intent(in) :: e
                real(kind=8) dimension(2),intent(out) :: topay_upt
                real(kind=8) dimension(2),intent(out) :: to_storage
                real(kind=8) dimension(2),intent(out) :: passive_upt
            end subroutine passive_uptake
            function cc_active(k1,d1,k2,d2) result (c_active) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: k1
                real(kind=8) intent(in) :: d1
                real(kind=8) intent(in) :: k2
                real(kind=8) intent(in) :: d2
                real(kind=8) :: c_active
            end function cc_active
            subroutine active_cost(amp,av_n,av_p,croot,cc) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: amp
                real(kind=8) intent(in) :: av_n
                real(kind=8) intent(in) :: av_p
                real(kind=8) intent(in) :: croot
                real(kind=8) dimension(2,4),intent(out) :: cc
            end subroutine active_cost
            subroutine active_costn(amp,av_n,on,croot,ccn) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: amp
                real(kind=8) intent(in) :: av_n
                real(kind=8) intent(in) :: on
                real(kind=8) intent(in) :: croot
                real(kind=8) dimension(6),intent(out) :: ccn
            end subroutine active_costn
            subroutine active_costp(amp,av_p,sop,op,croot,ccp) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: amp
                real(kind=8) intent(in) :: av_p
                real(kind=8) intent(in) :: sop
                real(kind=8) intent(in) :: op
                real(kind=8) intent(in) :: croot
                real(kind=8) dimension(8),intent(out) :: ccp
            end subroutine active_costp
            function cc_fix(ts) result (c_fix) ! in :caete_module:cc.f90:carbon_costs
                real(kind=4) intent(in) :: ts
                real(kind=8) :: c_fix
            end function cc_fix
            function fixed_n(c,ts) result (fn) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: c
                real(kind=4) intent(in) :: ts
                real(kind=8) :: fn
            end function fixed_n
            function cc_retran(k1,d1) result (c_retran) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: k1
                real(kind=8) intent(in) :: d1
                real(kind=8) :: c_retran
            end function cc_retran
            function retran_nutri_cost(littern,resorbed_n,nut) result (c_cost_nr) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: littern
                real(kind=8) intent(in) :: resorbed_n
                integer(kind=4) intent(in) :: nut
                real(kind=8) :: c_cost_nr
            end function retran_nutri_cost
            subroutine select_active_strategy(cc_array,cc,strategy) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) dimension(:),intent(in) :: cc_array
                real(kind=8) intent(out) :: cc
                integer(kind=4) intent(out) :: strategy
            end subroutine select_active_strategy
            subroutine prep_out_n(nut_aqui_strat,nupt,to_pay,out_array) ! in :caete_module:cc.f90:carbon_costs
                integer(kind=4) intent(in) :: nut_aqui_strat
                real(kind=8) intent(in) :: nupt
                real(kind=8) intent(in) :: to_pay
                real(kind=8) dimension(2),intent(out) :: out_array
            end subroutine prep_out_n
            subroutine prep_out_p(nut_aqui_strat,pupt,to_pay,out_array) ! in :caete_module:cc.f90:carbon_costs
                integer(kind=4) intent(in) :: nut_aqui_strat
                real(kind=8) intent(in) :: pupt
                real(kind=8) intent(in) :: to_pay
                real(kind=8) dimension(3),intent(out) :: out_array
            end subroutine prep_out_p
            subroutine ap_actvity1(c_xm,strat,cc_array,ezc_ap) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: c_xm
                integer(kind=4) intent(in) :: strat
                real(kind=8) dimension(2,4),intent(in) :: cc_array
                real(kind=8) intent(out) :: ezc_ap
            end subroutine ap_actvity1
            subroutine ezc_prod(c_ezc,strat,cc_array,enzyme_conc) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: c_ezc
                integer(kind=4) intent(in) :: strat
                real(kind=8) dimension(2,4),intent(in) :: cc_array
                real(kind=8) intent(out) :: enzyme_conc
            end subroutine ezc_prod
            function active_nutri_gain(enzyme_conc) result (nutri_out) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: enzyme_conc
                real(kind=8) :: nutri_out
            end function active_nutri_gain
            function n_invest_p(c_ezc) result (nmass) ! in :caete_module:cc.f90:carbon_costs
                real(kind=8) intent(in) :: c_ezc
                real(kind=8) :: nmass
            end function n_invest_p
        end module carbon_costs
        module alloc ! in :caete_module:allocation.f90
            use types
            use carbon_costs, only: fixed_n,passive_uptake,active_costn,active_costp,prep_out_n,prep_out_p,retran_nutri_cost,select_active_strategy
            use global_par, only: ntraits,sapwood
            use photo, only: f_four,spec_leaf_area,realized_npp
            subroutine allocation(dt,npp,npp_costs,ts,wsoil,te,nmin,plab,on,sop,op,scl1,sca1,scf1,storage,storage_out_alloc,scl2,sca2,scf2,leaf_litter,cwd,root_litter,nitrogen_uptake,phosphorus_uptake,litter_nutrient_content,limiting_nutrient,c_costs_of_uptake,uptk_strategy) ! in :caete_module:allocation.f90:alloc
                real(kind=8) dimension(17),intent(in) :: dt
                real(kind=4) intent(in) :: npp
                real(kind=8) intent(in) :: npp_costs
                real(kind=4) intent(in) :: ts
                real(kind=8) intent(in) :: wsoil
                real(kind=8) intent(in) :: te
                real(kind=4) intent(in) :: nmin
                real(kind=4) intent(in) :: plab
                real(kind=8) intent(in) :: on
                real(kind=8) intent(in) :: sop
                real(kind=8) intent(in) :: op
                real(kind=8) intent(in) :: scl1
                real(kind=8) intent(in) :: sca1
                real(kind=8) intent(in) :: scf1
                real(kind=8) dimension(3),intent(in) :: storage
                real(kind=8) dimension(3),intent(out) :: storage_out_alloc
                real(kind=8) intent(out) :: scl2
                real(kind=8) intent(out) :: sca2
                real(kind=8) intent(out) :: scf2
                real(kind=8) intent(out) :: leaf_litter
                real(kind=8) intent(out) :: cwd
                real(kind=8) intent(out) :: root_litter
                real(kind=8) dimension(2),intent(out) :: nitrogen_uptake
                real(kind=8) dimension(3),intent(out) :: phosphorus_uptake
                real(kind=8) dimension(6),intent(out) :: litter_nutrient_content
                integer(kind=2) dimension(3),intent(out) :: limiting_nutrient
                real(kind=8) intent(out) :: c_costs_of_uptake
                integer(kind=4) dimension(2),intent(out) :: uptk_strategy
            end subroutine allocation
        end module alloc
        module productivity ! in :caete_module:productivity.f90
            subroutine prod(dt,light_limit,catm,temp,ts,p0,w,ipar,rh,emax,cl1_prod,ca1_prod,cf1_prod,beta_leaf,beta_awood,beta_froot,wmax,ph,ar,nppa,laia,f5,vpd,rm,rg,rc,wue,c_defcit,vm_out,sla,e) ! in :caete_module:productivity.f90:productivity
                use types
                use global_par
                use photo_par
                use photo
                use water
                real(kind=8) dimension(17),intent(in) :: dt
                logical(kind=2) intent(in) :: light_limit
                real(kind=8) intent(in) :: catm
                real(kind=4) intent(in) :: temp
                real(kind=4) intent(in) :: ts
                real(kind=4) intent(in) :: p0
                real(kind=8) intent(in) :: w
                real(kind=4) intent(in) :: ipar
                real(kind=4) intent(in) :: rh
                real(kind=4) intent(in) :: emax
                real(kind=8) intent(in) :: cl1_prod
                real(kind=8) intent(in) :: ca1_prod
                real(kind=8) intent(in) :: cf1_prod
                real(kind=8) intent(in) :: beta_leaf
                real(kind=8) intent(in) :: beta_awood
                real(kind=8) intent(in) :: beta_froot
                real(kind=8) intent(in) :: wmax
                real(kind=4) intent(out) :: ph
                real(kind=4) intent(out) :: ar
                real(kind=4) intent(out) :: nppa
                real(kind=8) intent(out) :: laia
                real(kind=8) intent(out) :: f5
                real(kind=4) intent(out) :: vpd
                real(kind=4) intent(out) :: rm
                real(kind=4) intent(out) :: rg
                real(kind=4) intent(out) :: rc
                real(kind=4) intent(out) :: wue
                real(kind=4) intent(out) :: c_defcit
                real(kind=8) intent(out) :: vm_out
                real(kind=8) intent(out) :: sla
                real(kind=8) intent(out) :: e
            end subroutine prod
        end module productivity
        module budget ! in :caete_module:budget.f90
            subroutine daily_budget(dt,w1,w2,ts,temp,p0,ipar,rh,mineral_n,labile_p,on,sop,op,catm,sto_budg_in,cl1_in,ca1_in,cf1_in,dleaf_in,dwood_in,droot_in,uptk_costs_in,wmax_in,evavg,epavg,phavg,aravg,nppavg,laiavg,rcavg,f5avg,rmavg,rgavg,cleafavg_pft,cawoodavg_pft,cfrootavg_pft,storage_out_bdgt_1,ocpavg,wueavg,cueavg,c_defavg,vcmax_1,specific_la_1,nupt_1,pupt_1,litter_l_1,cwd_1,litter_fr_1,npp2pay_1,lit_nut_content_1,delta_cveg_1,limitation_status_1,uptk_strat_1,cp,c_cost_cwm) ! in :caete_module:budget.f90:budget
                use types
                use global_par
                use alloc
                use productivity
                use omp_lib
                use photo, only: pft_area_frac,sto_resp
                use water, only: evpot2,penman,available_energy,runoff
                real(kind=8) dimension(17,100),intent(in) :: dt
                real(kind=8) intent(in) :: w1
                real(kind=8) intent(in) :: w2
                real(kind=4) intent(in) :: ts
                real(kind=4) intent(in) :: temp
                real(kind=4) intent(in) :: p0
                real(kind=4) intent(in) :: ipar
                real(kind=4) intent(in) :: rh
                real(kind=4) intent(in) :: mineral_n
                real(kind=4) intent(in) :: labile_p
                real(kind=8) intent(in) :: on
                real(kind=8) intent(in) :: sop
                real(kind=8) intent(in) :: op
                real(kind=8) intent(in) :: catm
                real(kind=8) dimension(3,100),intent(in) :: sto_budg_in
                real(kind=8) dimension(100),intent(in) :: cl1_in
                real(kind=8) dimension(100),intent(in) :: ca1_in
                real(kind=8) dimension(100),intent(in) :: cf1_in
                real(kind=8) dimension(100),intent(in) :: dleaf_in
                real(kind=8) dimension(100),intent(in) :: dwood_in
                real(kind=8) dimension(100),intent(in) :: droot_in
                real(kind=8) dimension(100),intent(in) :: uptk_costs_in
                real(kind=8) intent(in) :: wmax_in
                real(kind=8) intent(out) :: evavg
                real(kind=4) intent(out) :: epavg
                real(kind=8) intent(out) :: phavg
                real(kind=8) intent(out) :: aravg
                real(kind=8) intent(out) :: nppavg
                real(kind=8) intent(out) :: laiavg
                real(kind=8) intent(out) :: rcavg
                real(kind=8) intent(out) :: f5avg
                real(kind=8) intent(out) :: rmavg
                real(kind=8) intent(out) :: rgavg
                real(kind=8) dimension(100),intent(out) :: cleafavg_pft
                real(kind=8) dimension(100),intent(out) :: cawoodavg_pft
                real(kind=8) dimension(100),intent(out) :: cfrootavg_pft
                real(kind=8) dimension(3,100),intent(out) :: storage_out_bdgt_1
                real(kind=8) dimension(100),intent(out) :: ocpavg
                real(kind=8) intent(out) :: wueavg
                real(kind=8) intent(out) :: cueavg
                real(kind=8) intent(out) :: c_defavg
                real(kind=8) intent(out) :: vcmax_1
                real(kind=8) intent(out) :: specific_la_1
                real(kind=8) dimension(2),intent(out) :: nupt_1
                real(kind=8) dimension(3),intent(out) :: pupt_1
                real(kind=8) intent(out) :: litter_l_1
                real(kind=8) intent(out) :: cwd_1
                real(kind=8) intent(out) :: litter_fr_1
                real(kind=8) dimension(100),intent(out) :: npp2pay_1
                real(kind=8) dimension(6),intent(out) :: lit_nut_content_1
                real(kind=8) dimension(3,100),intent(out) :: delta_cveg_1
                integer(kind=2) dimension(3,100),intent(out) :: limitation_status_1
                integer(kind=4) dimension(2,100),intent(out) :: uptk_strat_1
                real(kind=8) dimension(3),intent(out) :: cp
                real(kind=8) intent(out) :: c_cost_cwm
            end subroutine daily_budget
        end module budget
    end interface 
end python module caete_module

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
